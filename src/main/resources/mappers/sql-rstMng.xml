<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rstMgn">

	<cache />

	<!--
	성과 관리 
	 -->	
	 
	<select id="getConsultingTypeList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	rstMgn.getConsultingTypeList
			Main/Sub 분류별 실적 관리
		*/

		SELECT  CONSULTING_TYPE
		, GET_CODE_NM( 'CONSULTING_TYPE', CONSULTING_TYPE) CONSULTING_TYPE_NM
		<if test=" SUB_CATEGORY != null and !SUB_CATEGORY.equals('')">
		,CONSULTING_NM
		,CONSULTING_ID
		</if>
		, CNT			AS VALUE
		, SUM(CNT) OVER() ALL_CNT
		, ROUND( ( CNT / SUM(CNT) OVER() ) * 100 , 2 )  AS COLOR_VALUE
		FROM(
		
			SELECT CS.CONSULTING_TYPE 
			<if test=" SUB_CATEGORY != null and !SUB_CATEGORY.equals('')">
			, CS.CONSULTING_NM
			, CS.CONSULTING_ID
			</if>
			, COUNT(*) CNT  
			FROM TBL_EXP_CONTRACT C
			,TBL_EXP_CONSULTING CS
			WHERE C.CONSULTING_ID  = CS.CONSULTING_ID
			<if test=" SUB_CATEGORY != null and !SUB_CATEGORY.equals('')">
			AND CS.CONSULTING_TYPE = #{SUB_CATEGORY}
			</if>
			GROUP BY CS.CONSULTING_TYPE
			<if test=" SUB_CATEGORY != null and !SUB_CATEGORY.equals('')">
			, CS.CONSULTING_NM
			, CS.CONSULTING_ID
			</if>
			
		)
		ORDER BY COLOR_VALUE DESC
	</select>	

	<select id="getContractList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	rstMgn.getContractList
			전체 계약 리스트
		*/
		
	SELECT * 
	FROM(

		SELECT C.CONTRACT_ID
		, C.USER_ID
		, GET_USER_NM(C.USER_ID) USER_NM
		, U.SALES_TYPE
		, GET_CODE_NM('SALES_TYPE', U.SALES_TYPE ) SALES_TYPE_NM
		, C.CONTACT_DATE
		, TO_CHAR( C.CONTRACT_DATE , 'YYYY' ) AS CONTRACT_YEAR
		, TO_CHAR( C.CONTRACT_DATE , 'MM' ) AS CONTRACT_MONTH
		, C.CONTRACT_TYPE
		, GET_CODE_NM('CONTRACT_TYPE', C.CONTRACT_TYPE ) CONTRACT_TYPE_NM
		, C.EXPIRE_DATE
		, C.TOTAL_COST
		, C.CONSULTING_ID
		, C.PROCESS_STATE
		, C.LAST_SOLUTION
		, C.TAX_MNG
		, C.LABOR_MNG
		, C.CONSULTING_CLASS
		, C.USE_YN
		, C.DEL_YN
		, C.UPDATE_USER
		, C.UPDATE_DATE
		, B.BUYER_ID 
		, B.BUYER_NM
		, B.COMPANY_REGNUM 
		, B.GET_PATH
		, GET_CODE_NM( 'GET_PATH', B.GET_PATH ) GET_PATH_NM
		, CS.CONSULTING_TYPE 
		, CS.CONSULTING_NM
		, (SELECT SUM ( RE.INCOME  ) 
			FROM TBL_EXP_RESULT RE 
			WHERE  C.CONTRACT_ID = RE.CONTRACT_ID AND RE.USE_YN ='Y' AND RE.DEL_YN = 'N' 
		  ) AS TOT_INCOME
		,RANK() OVER (ORDER BY (SELECT SUM(RE.INCOME) FROM TBL_EXP_RESULT RE WHERE C.CONTRACT_ID = RE.CONTRACT_ID AND RE.USE_YN ='Y' AND RE.DEL_YN = 'N' ) ) AS RANK
		FROM TBL_EXP_CONTRACT C
		,TBL_EXP_BUYER B
		,TBL_EXP_CONSULTING CS
		,TBL_EXP_USER U
		WHERE 1=1
		AND C.BUYER_ID  = B.BUYER_ID 
		AND C.USE_YN = 'Y' AND C.DEL_YN ='N'
		AND C.CONSULTING_ID  = CS.CONSULTING_ID  
		AND B.USE_YN = 'Y' AND B.DEL_YN ='N'
		AND C.USER_ID = U.USER_ID AND U.USE_YN = 'Y' AND U.DEL_YN = 'N'
		<if test=" CONSULTING_ID != null and !CONSULTING_ID.equals('')">
		AND CS.CONSULTING_ID = #{CONSULTING_ID}
		</if>		
		<if test=" CONSULTING_TYPE != null and !CONSULTING_TYPE.equals('')">
		AND CS.CONSULTING_TYPE = #{CONSULTING_TYPE}
		</if>		
		<if test=" FROM_CONTRACT_DATE != null and !FROM_CONTRACT_DATE.equals('')">
		AND C.CONTRACT_DATE <![CDATA[>=]]> #{FROM_CONTRACT_DATE}
		</if>		
		<if test=" TO_CONTRACT_DATE != null and !TO_CONTRACT_DATE.equals('')">
		AND C.CONTRACT_DATE <![CDATA[<=]]> #{TO_CONTRACT_DATE}
		</if>		
		)
		<if test=" RANK != null and !RANK.equals('')">
		WHERE RANK <![CDATA[<=]]> #{RANK} AND ROWNUM <![CDATA[<=]]> #{RANK}
		</if>
	</select>	
	
	
	
	<select id="getOrgSellingPriceList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	rstMgn.getOrgSellingPriceList
			전체  순매출 (월자문/1회성컨설팅) 
		*/

		WITH MONTHS_24 AS (
			SELECT TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE, 'YEAR'), -12 + LEVEL - 1), 'YYYYMM') AS month
			FROM DUAL
			CONNECT BY LEVEL <![CDATA[ <= ]]> 24
		)
		,EACH_CONTRACT AS (
			SELECT M.month, NVL(CONTRACT_ID, 0) AS CONTRACT_ID, NVL(TOTAL_COST, 0) AS TOTAL_COST, NVL(RESULT_ID, 0) AS RESULT_ID,
			       NVL(TOT_INCOME, 0) AS TOT_INCOME, NVL(ORG_SELLING_PRICE, 0) AS ORG_SELLING_PRICE, NVL(TOT_COST_PRICE, 0) AS TOT_COST_PRICE
			FROM MONTHS_24 M
			, (
				SELECT CN.CONTRACT_ID
				, CN.TOTAL_COST
				, RST.RESULT_ID
				, TO_CHAR(RST.RESULT_DATE, 'YYYYMM') AS EACH_MONTH
				, SUM(RST.INCOME) AS TOT_INCOME
				, SUM(ORG_SELLING_PRICE) AS ORG_SELLING_PRICE
				, SUM(CS.COST_PRICE) AS TOT_COST_PRICE
				FROM TBL_EXP_CONTRACT CN
				,TBL_EXP_RESULT RST
				,TBL_EXP_COST CS
				WHERE CN.CONTRACT_TYPE = #{CONTRACT_TYPE}
				AND CN.CONTRACT_ID = RST.CONTRACT_ID 
				AND CN.CONTRACT_ID = CS.CONTRACT_ID
				AND CS.RESULT_ID = RST.RESULT_ID
				AND CN.USE_YN = 'Y' AND CN.DEL_YN = 'N'
				AND RST.USE_YN = 'Y' AND RST.DEL_YN = 'N'
				AND CS.USE_YN = 'Y' AND CS.DEL_YN = 'N'
				GROUP BY CN.CONTRACT_ID, CN.TOTAL_COST, RST.RESULT_ID, TO_CHAR(RST.RESULT_DATE, 'YYYYMM')
			) Data 
			WHERE  M.month = Data.EACH_MONTH
			ORDER BY M.month, CONTRACT_ID
		)
		SELECT M.MONTH , NVL(C.ORG_SELLING_PRICE, 0 ) ORG_SELLING_PRICE
		FROM MONTHS_24 M, 
		(
			SELECT C.MONTH ,SUM(ORG_SELLING_PRICE) AS ORG_SELLING_PRICE
			FROM EACH_CONTRACT C
			GROUP BY C.MONTH 
		)  C
		WHERE M.MONTH = C.MONTH(+)
		ORDER BY M.MONTH
		
	</select>	
	
	<select id="getOrgSellingPriceByDetailList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	rstMgn.getOrgSellingPriceByDetailList
			전체  순매출 (컨설팅상세별) 
		*/

		SELECT 
		  CT.CONSULTING_ID
		, CT.CONSULTING_NM 
		, TO_CHAR(RST.RESULT_DATE, 'YYYY') AS EACH_YEAR
		, SUM(RST.INCOME) AS TOT_INCOME
		, SUM(ORG_SELLING_PRICE) AS ORG_SELLING_PRICE
		, SUM(CS.COST_PRICE) AS TOT_COST_PRICE
		FROM TBL_EXP_CONTRACT CN
		,TBL_EXP_RESULT RST
		,TBL_EXP_COST CS
		,TBL_EXP_CONSULTING CT
		WHERE 1=1
		AND CN.CONTRACT_ID = RST.CONTRACT_ID 
		AND CN.CONTRACT_ID = CS.CONTRACT_ID
		AND CS.RESULT_ID = RST.RESULT_ID
		AND CN.USE_YN = 'Y' AND CN.DEL_YN = 'N'
		AND RST.USE_YN = 'Y' AND RST.DEL_YN = 'N'
		AND CS.USE_YN = 'Y' AND CS.DEL_YN = 'N'
		AND CT.CONSULTING_ID  = CN.CONSULTING_ID 
		GROUP BY  CT.CONSULTING_ID, CT.CONSULTING_NM , TO_CHAR(RST.RESULT_DATE, 'YYYY')	   
		ORDER BY CONSULTING_NM,EACH_YEAR 
		
	</select>	
	
	<select id="getPaymentList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	rstMgn.getPaymentList
			전체  수수료 지급 (월자문/1회성컨설팅) 
		*/

		WITH MONTHS_24 AS (
			SELECT TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE, 'YEAR'), -12 + LEVEL - 1), 'YYYYMM') AS month
			FROM DUAL
			CONNECT BY LEVEL <![CDATA[ <= ]]> 24
		)
		,EACH_PAYMENT AS (
		
			SELECT  M.month,  DATA.TOTAL_INCOME
			FROM MONTHS_24 M
			,(
				SELECT RESULT_MONTH ,SUM( PAYMENT) TOTAL_INCOME
				FROM(
						SELECT DISTINCT
						TO_CHAR( R.RESULT_DATE, 'YYYYMM') AS RESULT_MONTH
						,R.INCOME
						,P.PAYMENT
						FROM TBL_EXP_RESULT R
						,TBL_EXP_CONTRACT C
						,TBL_EXP_PAYMENT P
						,TBL_EXP_CONTRACT_MEMBER CM
						,TBL_EXP_USER U
						WHERE C.CONTRACT_ID	= R.CONTRACT_ID 
						AND R.CONTRACT_ID	= P.CONTRACT_ID 
						AND R.RESULT_ID		= P.RESULT_ID 
						AND C.CONTRACT_TYPE = #{CONTRACT_TYPE}
						AND C.CONTRACT_ID 	= CM.CONTRACT_ID 
						AND P.USER_ID 		= CM.USER_ID
						AND P.USER_ID 		= U.USER_ID 
						AND R.USE_YN		= 'Y'
						AND R.DEL_YN		= 'N'
						AND P.USE_YN		= 'Y'
						AND P.DEL_YN		= 'N'
						AND CM.USE_YN		= 'Y'
						AND CM.DEL_YN		= 'N'
						AND TO_CHAR(R.RESULT_DATE, 'YYYY') <![CDATA[ >= ]]> TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), -12), 'YYYY')
						AND TO_CHAR(R.RESULT_DATE, 'YYYY') <![CDATA[ >= ]]> TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), 0), 'YYYY')
				)	
				GROUP BY  RESULT_MONTH
			) DATA
			WHERE M.MONTH = DATA.RESULT_MONTH(+)
		)
		SELECT * FROM EACH_PAYMENT
		ORDER BY MONTH 
		
	</select>	
	
	<select id="getSellingGrowthRate" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	rstMgn.getSellingGrowthRate
			전체  순매출 성장률 (월자문/1회성컨설팅) 
		*/
	
		WITH MONTHS_24 AS (
			SELECT TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE, 'YEAR'), -12 + LEVEL - 1), 'YYYYMM') AS month
			FROM DUAL
			CONNECT BY LEVEL <![CDATA[ <= ]]> 24
		)
		,EACH_CONTRACT AS (
		
			SELECT M.month, NVL(CONTRACT_ID, 0) AS CONTRACT_ID, NVL(TOTAL_COST, 0) AS TOTAL_COST, NVL(RESULT_ID, 0) AS RESULT_ID,
			       NVL(TOT_INCOME, 0) AS TOT_INCOME, NVL(ORG_SELLING_PRICE, 0) AS ORG_SELLING_PRICE, NVL(TOT_COST_PRICE, 0) AS TOT_COST_PRICE
			FROM MONTHS_24 M
			, (
				SELECT CN.CONTRACT_ID
				, CN.TOTAL_COST
				, RST.RESULT_ID
				, TO_CHAR(RST.RESULT_DATE, 'YYYYMM') AS EACH_MONTH
				, SUM(RST.INCOME) AS TOT_INCOME
				, SUM(ORG_SELLING_PRICE) AS ORG_SELLING_PRICE
				, SUM(CS.COST_PRICE) AS TOT_COST_PRICE
				FROM TBL_EXP_CONTRACT CN
				,TBL_EXP_RESULT RST
				,TBL_EXP_COST CS
				WHERE CN.CONTRACT_TYPE = #{CONTRACT_TYPE}
				AND CN.CONTRACT_ID = RST.CONTRACT_ID 
				AND CN.CONTRACT_ID = CS.CONTRACT_ID
				AND CS.RESULT_ID = RST.RESULT_ID
				AND CN.USE_YN = 'Y' AND CN.DEL_YN = 'N'
				AND RST.USE_YN = 'Y' AND RST.DEL_YN = 'N'
				AND CS.USE_YN = 'Y' AND CS.DEL_YN = 'N'
				GROUP BY CN.CONTRACT_ID, CN.TOTAL_COST, RST.RESULT_ID, TO_CHAR(RST.RESULT_DATE, 'YYYYMM')
			) DATA 
			WHERE  M.MONTH = DATA.EACH_MONTH
			ORDER BY M.MONTH, CONTRACT_ID
		)
		,SELLING_PRICE AS (
		
			SELECT M.MONTH , NVL(C.ORG_SELLING_PRICE, 0 ) ORG_SELLING_PRICE
			FROM MONTHS_24 M, 
			(
			SELECT C.MONTH ,SUM(ORG_SELLING_PRICE) AS ORG_SELLING_PRICE
			FROM EACH_CONTRACT C
			GROUP BY C.MONTH 
			)  C
			WHERE M.MONTH = C.MONTH(+)
		)
		,SALES_GROWTH AS (
		    SELECT
		        A.MONTH AS THIS_MONTH,
		        B.MONTH AS LAST_MONTH,
		        A.ORG_SELLING_PRICE AS THIS_MONTH_SALES,
		        B.ORG_SELLING_PRICE AS LAST_MONTH_SALES,
		        DECODE(B.ORG_SELLING_PRICE,0,0, (A.ORG_SELLING_PRICE / B.ORG_SELLING_PRICE - 1) * 100) AS GROWTH_RATE
		    FROM SELLING_PRICE A
		    ,SELLING_PRICE B 
		    WHERE SUBSTR(A.MONTH, 1, 4) = SUBSTR(B.MONTH, 1, 4)
			AND TO_NUMBER(SUBSTR(A.MONTH, 5, 2)) = TO_NUMBER(SUBSTR(B.MONTH, 5, 2)) + 1
		)
		SELECT
		    THIS_MONTH,
		    THIS_MONTH_SALES,
		    LAST_MONTH_SALES,
		    GROWTH_RATE
		FROM SALES_GROWTH
		ORDER BY THIS_MONTH 	
	</select>
	
	<select id="getSellingGrowthRate" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	rstMgn.getSellingGrowthRate
			전체  지사별 순매출  
		*/
		WITH MONTHS_24 AS (
			SELECT TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE, 'YEAR'), -12 + LEVEL - 1), 'YYYYMM') AS month
			FROM DUAL
			CONNECT BY LEVEL <![CDATA[ <= ]]> 24
		)
		,EACH_PAYMENT AS (
		
			SELECT  M.month,  DATA.BRANCH_ID, DATA.TOTAL_INCOME
			FROM MONTHS_24 M
			,(
				SELECT RESULT_MONTH ,BRANCH_ID ,SUM( PAYMENT) TOTAL_INCOME
				FROM(
						SELECT DISTINCT
						TO_CHAR( R.RESULT_DATE, 'YYYYMM') AS RESULT_MONTH
						,R.INCOME
						,P.PAYMENT
						,U.BRANCH_ID
						FROM TBL_EXP_RESULT R
						,TBL_EXP_CONTRACT C
						,TBL_EXP_PAYMENT P
						,TBL_EXP_CONTRACT_MEMBER CM
						,TBL_EXP_USER U
						WHERE C.CONTRACT_ID	= R.CONTRACT_ID 
						AND R.CONTRACT_ID	= P.CONTRACT_ID 
						AND R.RESULT_ID		= P.RESULT_ID 
						AND C.CONTRACT_TYPE = #{CONTRACT_TYPE}
						AND C.CONTRACT_ID 	= CM.CONTRACT_ID 
						AND P.USER_ID 		= CM.USER_ID
						AND P.USER_ID 		= U.USER_ID 
						AND R.USE_YN		= 'Y'
						AND R.DEL_YN		= 'N'
						AND P.USE_YN		= 'Y'
						AND P.DEL_YN		= 'N'
						AND CM.USE_YN		= 'Y'
						AND CM.DEL_YN		= 'N'
						AND TO_CHAR(R.RESULT_DATE, 'YYYY') <![CDATA[ >= ]]> TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), -12), 'YYYY')
						AND TO_CHAR(R.RESULT_DATE, 'YYYY') <![CDATA[ <= ]]> TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), 0), 'YYYY')
				)	
				GROUP BY  RESULT_MONTH ,BRANCH_ID 
			) DATA
			WHERE M.MONTH = DATA.RESULT_MONTH(+)
		)
		SELECT * FROM EACH_PAYMENT
		ORDER BY MONTH		
	
	</select>
	
		<select id="getContractCnt" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	rstMgn.getContractCnt
			전체  계약건수 ( 월자문 / 일회성 ) 
		*/
			
		WITH MONTHS_24 AS (
			SELECT TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE, 'YEAR'), -12 + LEVEL - 1), 'YYYYMM') AS month
			FROM DUAL
			CONNECT BY LEVEL <![CDATA[ <= ]]> 24
		)
		,EACH_CONTRACT AS (
			SELECT M.month, COUNT(CONTRACT_ID) CONTRACT_CNT
			FROM MONTHS_24 M
			, (
				SELECT CN.CONTRACT_ID
				, TO_CHAR(RST.RESULT_DATE, 'YYYYMM') AS EACH_MONTH
				FROM TBL_EXP_CONTRACT CN
				,TBL_EXP_RESULT RST
				,TBL_EXP_COST CS
				WHERE CN.CONTRACT_TYPE = #{CONTRACT_TYPE}
				AND CN.CONTRACT_ID = RST.CONTRACT_ID 
				AND CN.CONTRACT_ID = CS.CONTRACT_ID
				AND CS.RESULT_ID = RST.RESULT_ID
				AND CN.USE_YN = 'Y' AND CN.DEL_YN = 'N'
				AND RST.USE_YN = 'Y' AND RST.DEL_YN = 'N'
				AND CS.USE_YN = 'Y' AND CS.DEL_YN = 'N'
				GROUP BY CN.CONTRACT_ID, CN.TOTAL_COST, RST.RESULT_ID, TO_CHAR(RST.RESULT_DATE, 'YYYYMM')
			) DATA 
			WHERE  M.month = DATA.EACH_MONTH
			GROUP BY M.month
			ORDER BY M.month 
		)
		SELECT M.MONTH , CONTRACT_CNT
		FROM MONTHS_24 M, EACH_CONTRACT C
		WHERE M.MONTH = C.MONTH(+)
		ORDER BY M.MONTH

	</select>
	
	<select id="getFASellingOrder" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	rstMgn.getFASellingOrder
			전체  FA 매출 순위 
		*/
		WITH MONTHS_24 AS (
			SELECT TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE, 'YEAR'), -12 + LEVEL - 1), 'YYYYMM') AS month
			FROM DUAL
			CONNECT BY LEVEL <![CDATA[ <= ]]> 24
		)
		,EACH_PAYMENT AS (
		
			SELECT  M.month,  DATA.USER_ID , DATA.USER_NM, DATA.TOTAL_INCOME
			FROM MONTHS_24 M
			,(
				SELECT RESULT_MONTH ,USER_ID , USER_NM ,SUM( PAYMENT) TOTAL_INCOME
				FROM(
						SELECT DISTINCT
						TO_CHAR( R.RESULT_DATE, 'YYYYMM') AS RESULT_MONTH
						,R.INCOME
						,P.PAYMENT
						,U.BRANCH_ID
						,U.USER_ID
						,U.USER_NM
						FROM TBL_EXP_RESULT R
						,TBL_EXP_CONTRACT C
						,TBL_EXP_PAYMENT P
						,TBL_EXP_CONTRACT_MEMBER CM
						,TBL_EXP_USER U
						WHERE C.CONTRACT_ID	= R.CONTRACT_ID 
						AND R.CONTRACT_ID	= P.CONTRACT_ID 
						AND R.RESULT_ID		= P.RESULT_ID 
						AND C.CONTRACT_TYPE =  #{CONTRACT_TYPE}
						AND C.CONTRACT_ID 	= CM.CONTRACT_ID 
						AND P.USER_ID 		= CM.USER_ID
						AND P.USER_ID 		= U.USER_ID 
						AND R.USE_YN		= 'Y'
						AND R.DEL_YN		= 'N'
						AND P.USE_YN		= 'Y'
						AND P.DEL_YN		= 'N'
						AND CM.USE_YN		= 'Y'
						AND CM.DEL_YN		= 'N'
						AND TO_CHAR(R.RESULT_DATE, 'YYYY') <![CDATA[ >= ]]> TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), -12), 'YYYY')
						AND TO_CHAR(R.RESULT_DATE, 'YYYY') <![CDATA[ <= ]]> TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE), 0), 'YYYY')
				)	
				GROUP BY  RESULT_MONTH ,USER_ID , USER_NM
			) DATA
			WHERE M.MONTH = DATA.RESULT_MONTH(+)
		)
		SELECT * FROM EACH_PAYMENT
		ORDER BY MONTH			

	</select>	
</mapper>
