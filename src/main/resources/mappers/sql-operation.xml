<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="operation">

	<cache />

	<!--
	운영 관리 
	 -->	
	<select id="getConsultingItem" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	operation.getConsultingItem
			컨설팅 조회 
		*/
		SELECT DISTINCT
		  CT.CONSULTING_ID
		, CT.CONSULTING_NM
		, CT.CONSULTING_TYPE
		, CT.CONSULTING_DESC
		FROM TBL_EXP_CONSULTING CT
		, TBL_EXP_CONTRACT R
		WHERE 1=1 
		<if test=" CONSULTING_ID != null and CONSULTING_ID != '' " >
		AND CT.CONSULTING_ID = #{CONSULTING_ID}
		</if>
		AND CT.CONSULTING_ID = R.CONSULTING_ID(+)
		ORDER BY CT.CONSULTING_NM  
	</select>	
		

	<update id="updateConsultingItem" parameterType="java.util.HashMap"  flushCache="true" >
		/*	operation.updateConsultingItem
			컨설팅 저장
		*/
		MERGE INTO TBL_EXP_CONSULTING T
		USING (
		  SELECT #{CONSULTING_ID} 	AS CONSULTING_ID,
		         #{CONSULTING_NM} 	AS CONSULTING_NM,
		         #{CONSULTING_TYPE} AS CONSULTING_TYPE,
		         #{CONSULTING_DESC} AS CONSULTING_DESC
		  FROM dual
		) S
		ON (T.CONSULTING_ID	= S.CONSULTING_ID 
		)
		WHEN MATCHED THEN
		  UPDATE SET
		         T.CONSULTING_NM 		= S.CONSULTING_NM,
		         T.CONSULTING_TYPE 		= S.CONSULTING_TYPE,
		         T.CONSULTING_DESC		= S.CONSULTING_DESC
		WHEN NOT MATCHED THEN 
    		INSERT (    CONSULTING_ID,   CONSULTING_NM,   CONSULTING_TYPE,   CONSULTING_DESC )
   			VALUES (  S.CONSULTING_ID, S.CONSULTING_NM, S.CONSULTING_TYPE, S.CONSULTING_DESC )
	</update>
	
	<delete id="deleteConsultingItem" parameterType="java.util.HashMap"  flushCache="true" >
		/*	operation.deleteConsultingItem
			컨설팅 삭제
		*/
		DELETE FROM  TBL_EXP_CONSULTING
		WHERE CONSULTING_ID	= #{CONSULTING_ID}
	</delete>

	<select id="getTeamList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	operation.getTeamList
			팀 리스트 가져오기
		*/
		SELECT
		     TEAM_ID
		    ,TEAM_NM
		    ,(SELECT count(*) FROM TBL_EXP_TEAM_MEMBER B WHERE A.TEAM_ID = B.TEAM_ID) AS MEMBER_CNT
		    ,(SELECT BRANCH_NM FROM TBL_EXP_BRANCH C WHERE A.BRANCH_ID = C.BRANCH_ID) AS BRANCH_NM
		    ,TO_CHAR( UPDATE_DATE , 'YYYY-MM-DD' ) UPDATE_DATE
		FROM
		    TBL_EXP_TEAM A
	</select>

	<select id="getTeamMemberList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	operation.getTeamMemberList
			팀 Member 리스트 가져오기
		*/
		SELECT
		     TEAM_ID
		    ,USER_ID
		    ,GET_USER_NM(USER_ID) AS USER_NM
		    ,TEAM_USER_ROLE
		    ,GET_CODE_NM('TEAM_USER_ROLE', TEAM_USER_ROLE) AS TEAM_USER_ROLE_NM
		    ,(SELECT GET_CODE_NM('GRADE', GRADE) FROM TBL_EXP_USER A WHERE A.USER_ID = B.USER_ID) AS GRADE
		    ,SP_CSTM_ID
		    ,UPDATE_USER
		    ,UPDATE_DATE
		FROM
		    TBL_EXP_TEAM_MEMBER B
		WHERE 
			TEAM_ID = #{TEAM_ID}  
   	</select>


			
</mapper>
