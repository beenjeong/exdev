<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cstm">

	<!--
	업무 관리 
	 -->	
	<sql id="getCstmList_body">
		SELECT ROW_NUMBER() OVER( ORDER BY B.BUYER_NM) RN
		, B.BUYER_ID
		, B.BUYER_NM
		, B.TEL
		, B.ADDR
		, B.COMPANY_REGNUM
		, B.HOW_GET
		, GET_CODE_NM( 'HOW_GET', B.HOW_GET ) HOW_GET_NM 
		, CASE 
			WHEN  ( SELECT COUNT(1) 
					FROM TBL_EXP_CONTRACT I 
					WHERE I.BUYER_ID = B.BUYER_ID 
					AND I.USE_YN ='Y' AND DEL_YN='N') 
					<![CDATA[ > ]]> 0 
			THEN 'N'
			ELSE 'Y'
		END AS CAN_DEL
		FROM TBL_EXP_BUYER B
		WHERE 1=1
		AND B.USE_YN = 'Y'
		AND B.DEL_YN = 'N'	
		AND ( 
			<if test=" parm.BUYER_ID != null and !parm.BUYER_ID.equals('') ">
				B.BUYER_ID like '%' || #{parm.BUYER_ID} || '%'
			</if>
			<if test=" parm.BUYER_NM != null and !parm.BUYER_NM.equals('') ">
				<if test=" parm.BUYER_ID != null and !parm.BUYER_ID.equals('') ">
				OR
				</if>
				B.BUYER_NM like '%' || #{parm.BUYER_NM} || '%'
			</if>
			<if test=" parm.COMPANY_REGNUM != null and !parm.COMPANY_REGNUM.equals('') ">
				<if test=" ( parm.BUYER_ID != null and !parm.BUYER_ID.equals('')  or parm.BUYER_NM != null and !parm.BUYER_NM.equals(''))">
				OR
				</if>
				B.COMPANY_REGNUM like '%' || #{parm.COMPANY_REGNUM} || '%'
			</if>
			<if test=" parm.ADDR != null and !parm.ADDR.equals('') ">
				<if test=" ( parm.BUYER_ID != null and !parm.BUYER_ID.equals('')  or parm.BUYER_NM != null and !parm.BUYER_NM.equals('') or parm.COMPANY_REGNUM != null and !parm.COMPANY_REGNUM.equals(''))">
				OR
				</if>			
				B.ADDR like '%' || #{parm.ADDR} || '%'
			</if>
			<if test=" parm.BUYER_ID == '' and parm.BUYER_NM == '' and parm.COMPANY_REGNUM == '' and parm.ADDR == ''">
				1=1
			</if>
		)
		<if test=' parm.CHECK_MEMBER != null and parm.CHECK_MEMBER =="Y" '>
		/* 고객을 등록 / 고객과 연계된 계약의 멤버들 */
		AND (  B.UPDATE_USER = #{sessionVo.userId}
			OR 
			   B.BUYER_ID IN ( SELECT DISTINCT C.BUYER_ID  
								FROM TBL_EXP_CONTRACT C
								,TBL_EXP_CONTRACT_MEMBER CM 
								WHERE C.CONTRACT_ID = CM.CONTRACT_ID 
								AND C.USE_YN = 'Y' AND C.DEL_YN = 'N'
								AND CM.USE_YN  = 'Y' AND C.DEL_YN = 'N'
								AND CM.USER_ID = #{sessionVo.userId}
				)
		)
		</if>
		
	</sql>
	<select id="getCstmList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	cstm.getCstmList
			고객 리스트 조회 
		*/
		<include refid="getCstmList_body"/>
        ORDER BY B.BUYER_NM
	</select>	
	<select id="getCstmList_totalCnt" resultType="Integer">
		/* hrInfo.getCstmList_totalCnt  */
		<include refid="common.totalWrapStart"/>
		<include refid="getCstmList_body"/>
		<include refid="common.totalWrapEnd"/>
	</select>
	<select id="getCstmList_paging" resultType="java.util.HashMap">
		/* hrInfo.getCstmList_paging  */
		<include refid="common.pagingWrapStart"/>
		<include refid="getCstmList_body"/>
        ORDER BY CASE WHEN B.UPDATE_DATE > SYSDATE-1 THEN 0 ELSE 1 END ,B.BUYER_NM
		<include refid="common.pagingWrapEnd"/>
	</select>
		 	
	<update id="updateCstm" parameterType="java.util.HashMap"  flushCache="true" >
		/*	cstm.updateCstm
			고객  저장
		*/
		MERGE INTO TBL_EXP_BUYER T
		USING (
		  SELECT #{BUYER_ID}		AS BUYER_ID,
		         #{BUYER_NM}		AS BUYER_NM,
		         #{TEL} 			AS TEL,
		         #{ADDR} 			AS ADDR,
		         #{COMPANY_REGNUM} 	AS COMPANY_REGNUM,
		         #{HOW_GET}		 	AS HOW_GET,
		         #{sessionVo.spCstmId} AS SP_CSTM_ID,
		         'Y' 				AS USE_YN,
		         'N'	 			AS DEL_YN,
		         #{sessionVo.userId} AS UPDATE_USER,
		         SYSDATE			AS UPDATE_DATE 
		  FROM dual
		) S
		ON (T.BUYER_ID	= S.BUYER_ID 
		)
		WHEN MATCHED THEN
		  UPDATE SET
		    T.BUYER_NM			= S.BUYER_NM,
		    T.TEL 				= S.TEL,
		    T.ADDR 				= S.ADDR,
		    T.COMPANY_REGNUM	= S.COMPANY_REGNUM,
		    T.HOW_GET			= S.HOW_GET,
		    T.SP_CSTM_ID		= S.SP_CSTM_ID,
		    T.USE_YN			= S.USE_YN,
		    T.DEL_YN			= S.DEL_YN,
		    T.UPDATE_USER		= S.UPDATE_USER,
		    T.UPDATE_DATE		= S.UPDATE_DATE
		WHEN NOT MATCHED THEN 
    		INSERT (   BUYER_ID,   BUYER_NM,   TEL,   ADDR,   COMPANY_REGNUM,   HOW_GET,   SP_CSTM_ID,   USE_YN,   DEL_YN,   UPDATE_USER,   UPDATE_DATE )
   			VALUES ( S.BUYER_ID, S.BUYER_NM, S.TEL, S.ADDR, S.COMPANY_REGNUM, S.HOW_GET, S.SP_CSTM_ID, S.USE_YN, S.DEL_YN, S.UPDATE_USER, S.UPDATE_DATE )
	</update>
	
	<delete id="deleteCstm" parameterType="java.util.HashMap"  flushCache="true" >
		/*	cstm.deleteCstm
			고객  삭제
		*/
		UPDATE TBL_EXP_BUYER
		SET USE_YN = 'N' 
		, DEL_YN = 'Y' 
		,UPDATE_USER = #{sessionVo.userId}
		,UPDATE_DATE = SYSDATE
		WHERE BUYER_ID = #{BUYER_ID}  
	</delete> 
	
</mapper>
